version: "3"

volumes:
  mongo_data: {}
  mongo_backup: {}
  node_logs: {}
  media_data: {}
  backend_node_module: {}

networks:
  app-network:
    driver: bridge

services:
  backend:
    restart: always
    container_name: awesome-express-project_node_stage
    build:
      context: .
      dockerfile: compose/node/Dockerfile
    env_file:
      - .env
    volumes:
      - backend_node_module:/home/app/awesome-express-project/node_modules
      - node_logs:/home/app/awesome-express-project/logs
      - media_data:/home/app/awesome-express-project/uploads
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    # tty: true
    
  mongo:
    restart: always
    image: mongo:4.2
    container_name: awesome-express-project_mongo_stage
    env_file:
      - .env
    command: mongod --storageEngine wiredTiger
    volumes:
      - mongo_data:/data/db
      - mongo_backup:/data/backup
    networks:
      - app-network

  redis:
    image: redis:5.0.12-alpine
    container_name: awesome-express-project_redis_local
    networks:
      - app-network

  nginx:
    restart: always
    build: ./compose/nginx
    container_name: awesome-express-project_nginx_stage
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

